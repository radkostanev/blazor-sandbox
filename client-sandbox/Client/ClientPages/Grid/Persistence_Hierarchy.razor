@page "/grid/persistance/hierarchy"

@inject ProductService ProductService

@inject LocalStorage LocalStorage

<div class="example-wrapper">
    <button @onclick="@ResetState"> Reset State </button>
</div>
<TelerikGrid @ref="@Grid"
             Data="@GridData"
             Pageable="true"
             OnStateInit="@((GridStateEventArgs<Product> args) => OnStateInit(args))"
             OnStateChanged="@((GridStateEventArgs<Product> args) => OnStateChanged(args))"
             PageSize="10">
    <GridColumns>
        <GridColumn Field=@nameof(Product.ProductName) Title="Product Name" Width="150px" />
        <GridColumn Field=@nameof(Product.UnitPrice) Title="Unit Price" />
        <GridColumn Field=@nameof(Product.UnitsInStock) Title="Units in stock" />
        <GridColumn Field=@nameof(Product.CreatedAt) Title="Date created" />
        <GridColumn Field=@nameof(Product.Discontinued) Title="Discontinued" />
    </GridColumns>

    <DetailTemplate>
        @{
            var product = context as Product;

            <TelerikGrid Data="@product.OrderDetails"
                         Height="300px"
                         Pageable="true"
                         Sortable="true"
                         PageSize="5">
                <GridColumns>
                    <GridColumn Field=@nameof(OrderDetails.OrderId) Title="Order ID" />
                    <GridColumn Field=@nameof(OrderDetails.UnitPrice) Title="Price" />
                    <GridColumn Field=@nameof(OrderDetails.Discount) Title="Discount">
                        <Template Context="order">
                            @(String.Format("{0:P2}", (order as OrderDetails).Discount))
                        </Template>

                    </GridColumn>
                    <GridColumn Field=@nameof(OrderDetails.Quantity) Title="Quantity" />
                </GridColumns>
            </TelerikGrid>
        }
    </DetailTemplate>
</TelerikGrid>

@code {
    public TelerikGrid<Product> Grid { get; set; }
    public List<Product> GridData { get; set; }

    protected override async Task OnInitializedAsync()
    {
        GridData = (await ProductService.GetProductsAsync(40, true)).ToList();
    }

    async Task OnStateInit(GridStateEventArgs<Product> args)
    {
        var state  = await LocalStorage.GetItem<GridState<Product>>("gridStateHierarchy");

        if (state != null)
        {
            var expandedIds = state.ExpandedItems?.Select(x => x.ProductId) ?? Enumerable.Empty<int>();
            var expandedItems = GridData.Where(x => expandedIds.Contains(x.ProductId)).ToList();

            state.ExpandedItems = expandedItems;
        }

        args.GridState = state;
    }

    async void OnStateChanged(GridStateEventArgs<Product> args)
    {
        await LocalStorage.SetItem("gridStateHierarchy", args.GridState);
    }

    private void ResetState()
    {
        Grid?.SetStateAsync(null);
        LocalStorage.RemoveItem("gridStateHierarchy");
    }
}
